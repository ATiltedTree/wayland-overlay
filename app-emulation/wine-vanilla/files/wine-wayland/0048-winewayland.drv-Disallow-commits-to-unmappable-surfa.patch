From 26b3d182c592ffe79dc844ffd8d635d3498e5616 Mon Sep 17 00:00:00 2001
From: Alexandros Frantzis <alexandros.frantzis@collabora.com>
Date: Thu, 18 Nov 2021 14:33:51 +0200
Subject: [PATCH 048/147] winewayland.drv: Disallow commits to unmappable
 surfaces.

Wayland surfaces without a role, which we use for hidden windows, are
not mappable, so any commits on them are never going to be visible.

Signed-off-by: Alexandros Frantzis <alexandros.frantzis@collabora.com>
---
 dlls/winewayland.drv/wayland_surface.c | 9 ++++++++-
 dlls/winewayland.drv/window.c          | 3 ++-
 2 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/dlls/winewayland.drv/wayland_surface.c b/dlls/winewayland.drv/wayland_surface.c
index c07e179c3db..e8f7500b705 100644
--- a/dlls/winewayland.drv/wayland_surface.c
+++ b/dlls/winewayland.drv/wayland_surface.c
@@ -136,7 +136,8 @@ struct wayland_surface *wayland_surface_create_plain(struct wayland *wayland)
         goto err;
 
     wl_surface_set_user_data(surface->wl_surface, surface);
-    surface->drawing_allowed = TRUE;
+    /* Plain surfaces are unmappable, so don't draw on them. */
+    surface->drawing_allowed = FALSE;
 
     surface->ref = 1;
     surface->role = WAYLAND_SURFACE_ROLE_NONE;
@@ -162,6 +163,8 @@ void wayland_surface_make_toplevel(struct wayland_surface *surface,
 
     TRACE("surface=%p parent=%p\n", surface, parent);
 
+    surface->drawing_allowed = TRUE;
+
     surface->xdg_surface =
         xdg_wm_base_get_xdg_surface(wayland->xdg_wm_base, surface->wl_surface);
     if (!surface->xdg_surface)
@@ -208,6 +211,8 @@ void wayland_surface_make_subsurface(struct wayland_surface *surface,
 
     TRACE("surface=%p parent=%p\n", surface, parent);
 
+    surface->drawing_allowed = TRUE;
+
     surface->parent = wayland_surface_ref(parent);
     surface->wl_subsurface =
         wl_subcompositor_get_subsurface(wayland->wl_subcompositor,
@@ -240,6 +245,8 @@ void wayland_surface_clear_role(struct wayland_surface *surface)
 {
     TRACE("surface=%p hwnd=%p\n", surface, surface->hwnd);
 
+    surface->drawing_allowed = FALSE;
+
     if (surface->xdg_toplevel)
     {
         xdg_toplevel_destroy(surface->xdg_toplevel);
diff --git a/dlls/winewayland.drv/window.c b/dlls/winewayland.drv/window.c
index d75ee2c0301..ea34c090aa7 100644
--- a/dlls/winewayland.drv/window.c
+++ b/dlls/winewayland.drv/window.c
@@ -760,7 +760,8 @@ static void wayland_win_data_update_wayland_surface_state(struct wayland_win_dat
 
     wayland_surface_reconfigure_apply(wsurface);
 
-    wsurface->drawing_allowed = TRUE;
+    if (wsurface->xdg_toplevel || wsurface->wl_subsurface)
+        wsurface->drawing_allowed = TRUE;
 
     LeaveCriticalSection(&wsurface->crit);
 }
-- 
2.34.1

