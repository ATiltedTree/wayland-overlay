From 3a389c40b647a45ad175c8383347f055db2b5f8d Mon Sep 17 00:00:00 2001
From: Alexandros Frantzis <alexandros.frantzis@collabora.com>
Date: Wed, 22 Sep 2021 13:00:10 +0300
Subject: [PATCH 124/147] winewayland.drv: Add skeleton data device format
 infrastructure.

Introduce infrastructure to convert clipboard/drag-and-drop data
between what Wayland understands and what Wine understands.

Signed-off-by: Alexandros Frantzis <alexandros.frantzis@collabora.com>
---
 dlls/winewayland.drv/Makefile.in              |  1 +
 dlls/winewayland.drv/wayland_data_device.c    |  2 +
 .../wayland_data_device_format.c              | 72 +++++++++++++++++++
 dlls/winewayland.drv/waylanddrv.h             | 14 ++++
 4 files changed, 89 insertions(+)
 create mode 100644 dlls/winewayland.drv/wayland_data_device_format.c

diff --git a/dlls/winewayland.drv/Makefile.in b/dlls/winewayland.drv/Makefile.in
index 1e754f644d1..84f18a0f04a 100644
--- a/dlls/winewayland.drv/Makefile.in
+++ b/dlls/winewayland.drv/Makefile.in
@@ -20,6 +20,7 @@ C_SRCS = \
 	wayland_buffer_queue.c \
 	wayland_cursor.c \
 	wayland_data_device.c \
+	wayland_data_device_format.c \
 	wayland_keyboard.c \
 	wayland_keyboard_layout.c \
 	wayland_pointer.c \
diff --git a/dlls/winewayland.drv/wayland_data_device.c b/dlls/winewayland.drv/wayland_data_device.c
index c76b5a6c264..c9b5572c890 100644
--- a/dlls/winewayland.drv/wayland_data_device.c
+++ b/dlls/winewayland.drv/wayland_data_device.c
@@ -296,6 +296,8 @@ static HWND wayland_data_device_create_clipboard_window(void)
         return 0;
     }
 
+    wayland_data_device_init_formats();
+
     TRACE("clipboard_hwnd=%p\n", clipboard_hwnd);
     return clipboard_hwnd;
 }
diff --git a/dlls/winewayland.drv/wayland_data_device_format.c b/dlls/winewayland.drv/wayland_data_device_format.c
new file mode 100644
index 00000000000..8491a48d64b
--- /dev/null
+++ b/dlls/winewayland.drv/wayland_data_device_format.c
@@ -0,0 +1,72 @@
+/*
+ * Wayland data device format handling
+ *
+ * Copyright (c) 2020 Alexandros Frantzis for Collabora Ltd
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+#include "config.h"
+
+#include "waylanddrv.h"
+
+#include "winuser.h"
+
+/* Order is important. When selecting a mime-type for a clipboard format we
+ * will choose the first entry that matches the specified clipboard format. */
+static struct wayland_data_device_format supported_formats[] =
+{
+    {NULL, 0, NULL, 0},
+};
+
+void wayland_data_device_init_formats(void)
+{
+    struct wayland_data_device_format *format = supported_formats;
+
+    while (format->mime_type)
+    {
+        if (format->clipboard_format == 0)
+            format->clipboard_format = RegisterClipboardFormatA(format->register_name);
+        format++;
+    }
+}
+
+struct wayland_data_device_format *wayland_data_device_format_for_mime_type(const char *mime)
+{
+    struct wayland_data_device_format *format = supported_formats;
+
+    while (format->mime_type)
+    {
+        if (!strcmp(mime, format->mime_type))
+            return format;
+        format++;
+    }
+
+    return NULL;
+}
+
+struct wayland_data_device_format *wayland_data_device_format_for_clipboard_format(UINT clipboard_format)
+{
+    struct wayland_data_device_format *format = supported_formats;
+
+    while (format->mime_type)
+    {
+        if (format->clipboard_format == clipboard_format)
+            return format;
+        format++;
+    }
+
+    return NULL;
+}
diff --git a/dlls/winewayland.drv/waylanddrv.h b/dlls/winewayland.drv/waylanddrv.h
index 4e545cad55b..f1f7f4fa68d 100644
--- a/dlls/winewayland.drv/waylanddrv.h
+++ b/dlls/winewayland.drv/waylanddrv.h
@@ -135,6 +135,17 @@ struct wayland_data_device
     struct wl_data_offer *dnd_wl_data_offer;
 };
 
+struct wayland_data_device_format
+{
+    const char *mime_type;
+    UINT clipboard_format;
+    const char *register_name;
+    HGLOBAL (*import)(struct wayland_data_device_format *format,
+                      const void *data, size_t data_size);
+    void (*export)(struct wayland_data_device_format *format, int fd);
+    UINT_PTR extra;
+};
+
 struct wayland
 {
     BOOL initialized;
@@ -492,6 +503,9 @@ void wayland_data_device_init(struct wayland_data_device *data_device,
                               struct wayland *wayland);
 void wayland_data_device_deinit(struct wayland_data_device *data_device);
 void wayland_data_device_ensure_clipboard_window(struct wayland *wayland);
+void wayland_data_device_init_formats(void);
+struct wayland_data_device_format *wayland_data_device_format_for_mime_type(const char *mime);
+struct wayland_data_device_format *wayland_data_device_format_for_clipboard_format(UINT clipboard_format);
 
 /**********************************************************************
  *          XKB helpers
-- 
2.34.1

